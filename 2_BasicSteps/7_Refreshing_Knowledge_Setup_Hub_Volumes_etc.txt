Docker Challenges to refresh Docker knowledge

# Challenges inspired by Andrei Dumitrescu course: Learn Linux by Doing with 5 Projects
---------------------------------------------------
Setting up a new Ubuntu Virtual Machine: 22.04.4-desktop-amd
Ubuntu Config

Your Name:	user_999
Computer Name: 	user999_VirtualBox
username: 	user_999
passwrod	****	jkl		jkl
---------------------------------------------------
# Installing Docker on Ubuntu

# Official Docker Installation Guide:
https://docs.docker.com/engine/install/ubuntu/

# uninstalling any old
sudo apt remove docker docker.io containerd runc

# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update


# Install Docker images
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

sudo systemctl status docker
sudo docker container run hello-world
sudo docker image ls
# docker is enabled and this image was pulled successfully

docker --version
> 27.0.3

# add user to docker group
sudo usermod -aG docker user_999

--------------------------------------------------

# Running and testing apache webserver
sudo docker container run -P httpd

sudo --login
# to avoid using sudo

# Create httpd docker container and start it
docker container create -p 80:80 httpd
docker container ls -a
docker container start b4276c1826cf
#  docker run = docker create and docker start

# on Mozilla Firefox
http://10.0.2.15/
> standard page that it works

---------------------------------------------------

# A webserver is run in a docker container
docker container run -d -p 8080:80 --name mysite nginx

# mozilla firefox loads nginx startpage
# through containers ip 10.0.2.15:8080

docker container run -d -p 8081:80 --name mysite1 nginx

# Running an apache webserver
docker container run -d -p 8082:80 --name mysite2 httpd

# Check docker images and running containers
docker image ls
docker ps

# remove all stopped containers
docker container rm $(docker container ls -a -f status=exited -q)
# removing all other containers
docker container rm -f $(docker container ls -a -q)

----------------------------------------------

# Wording of challenges changed of source of these challenges:

# Challenge #1
# Using Docker, find out how to manage containers and run them.
docker container --help
docker container run --help

----------------------------------------------

# Challenge #2
# Search Docker Hub for an image named mariadb.
docker search mariadb

----------------------------------------------

# Challenge #3
# Download the latest version of the Alpine Linux image and list all images you've downloaded.
docker pull alpine:edge
docker image ls

----------------------------------------------

# Challenge #4
# Launch a container from the Alpine Linux image. 
# Go inside the container and create a new file called a.txt 
# in the /root directory. Exit the container without stopping it. 
# Check if the file a.txt is still there when you re-enter the container.

docker container run -it alpine:edge
# Creating the new file inside
touch /root/a.txt
ls -l /root/

# Exit the container without stopping it with Ctrl+P+Q

docker container ls 
docker container exec -it d772e sh
ls -l /root/ 
# yes the container is still there
----------------------------------------------
